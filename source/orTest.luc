module orTest (
    input clk,  // clock
    input rst,  // reset
    
    // input
    input button,
    input count[4],
    // out is to show input1 input2 input3
    output out[16],
    //output v,
    //output n,
    //output z,
    output true
  ) {
  
  .clk(clk) {
  edge_detector edge_detector;
      .rst(rst) {
        fsm state = {BEGIN, LL, AL, LB, AB, GOOD, ERROR};
      dff timer[28];
      bol bol;
    }
  }
  
  // input/output for checking cases
  const HH = 16b1111111111111111;
  const LL = 16b1000000000000001;

  always {
    // define default outputs
    out = 0;
    bol.a = 0;
    bol.b = 0;
    timer.d = timer.q+1;

    // alufn for bool OR
    bol.io_dip = 8b00011110;
    // define true to be false
    true = 0;
    
    edge_detector.in = button;
    // cases
    case(state.q) {
      state.BEGIN:
        if (count==4 & edge_detector.out) {
          timer.d = 0;
          state.d = state.LL;
        }
        
      state.LL:
        bol.a = LL;
        bol.b = LL;
        if (timer.q[27:26]==0) {
          // show input1
          out = LL;
        } else if (timer.q[27:26]==1) {
          out = LL;
        } else if ( timer.q[27:26]==2) {
            // show result
          out = bol.out;
        } else if (timer.q[27:26]==3) {
          if (bol.out==LL){
            timer.d = 0;
            state.d = state.AL;
          } else {
            state.d = state.ERROR;
          }
        }

      state.AL:
        bol.a = HH;
        bol.b = LL;
        if (timer.q[27:26]==0) {
          // show input1
          out = HH;
        } else if (timer.q[27:26]==1) {
          out = LL;
        } else if ( timer.q[27:26]==2) {
            // show result
          out = bol.out;
        } else if (timer.q[27:26]==3) {
          if (bol.out==HH){
            timer.d = 0;
            state.d = state.LB;
          } else {
            state.d = state.ERROR;
          }
        }

      state.LB:
        bol.a = LL;
        bol.b = HH;
        if (timer.q[27:26]==0) {
          // show input1
          out = HH;
        } else if (timer.q[27:26]==1) {
          out = LL;
        } else if ( timer.q[27:26]==2) {
            // show result
          out = bol.out;
        } else if (timer.q[27:26]==3) {
          if (bol.out==HH){
            timer.d = 0;
            state.d = state.AB;
          } else {
            state.d = state.ERROR;
          }
        }
          
      state.AB:
        bol.a = HH;
        bol.b = HH;
        if (timer.q[27:26]==0) {
          // show input1
          out = HH;
        } else if (timer.q[27:26]==1) {
          out = LL;
        } else if ( timer.q[27:26]==2) {
            // show result
          out = bol.out;
        } else if (timer.q[27:26]==3) {
          if (bol.out==HH){
            timer.d = 0;
            state.d = state.GOOD;
          } else {
            state.d = state.ERROR;
          }
        }
      
      state.GOOD:
        if (timer.q[27] == 1) {
          true = 1;
          
        } else if (timer.q[25] == 1) {
          out = 16b1111111100000000;
        } else if (timer.q[25]==0){
          out = 16b0000000000000000;
        }
        
      state.ERROR:
        if (timer.q[25] == 1) {
          out = 16b0000000011111111;
        } else {
          out = 16b0000000000000000;
        }
        
    }
  }
}

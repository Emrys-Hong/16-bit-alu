module sraTest (
    input clk,  // clock
    input rst,  // reset
    
    // input
    input button,
    input count[4],
    // out is to show input1 input2 input3
    output out[16],
    output true
  ) {
  
  .clk(clk) {
      .rst(rst) {
        fsm state = {BEGIN, C1, C2, C3, C4, GOOD, ERROR};
      dff timer[28];
      sft shl;
    }
  }
  
  // checking cases
  const C1A = 16b0110100101101010;
  const C1B = 16b0000000000000100;
  const C2A = 16b1010100101101010;
  const C2B = 16b0000000000010000;
  const C3A = 16b0111111111111111;
  const C3B = 16b0000000000010000;
  const C4A = 16b1000000000000000;
  const C4B = 16b0000000000010000;
  
  // correct results
  const C1 = 16b0000011010010110;
  const C2 = 16b0000000000000000;
  const C3 = 16b1111101010010110;
  const C4 = 16b1111111111111111;
  
  always {
    // define default outputs
    out = 0;
    shl.a = 0;
    shl.b = 0;
    timer.d = timer.q+1;
    // alufn for add
    shl.io_dip = 8b00100000;
    // define true to be false
    true = 0;
    
    // cases
    case(state.q) {
      state.BEGIN:
        if (count==10 & ~button) {
          timer.d = 0;
          state.d = state.C1;
        }
        
      state.C1:
        shl.a = C1A;
        shl.b = C1B;
        if (timer.q[27:26]==0) {
          // show input1
          out = C1A;
        } else if (timer.q[27:26]==1) {
          out = C1B;
        } else if ( timer.q[27:26]==2) {
            // show result
          out = shl.out;
        } else if (timer.q[27:26]==3) {
          if (shl.out==C1){
            timer.d = 0;
            state.d = state.C2;
          } else {
            state.d = state.ERROR;
          }
        }
          
        
      state.C2:
        shl.a = C2A;
        shl.b = C2B;
        if (timer.q[27:26]==0) {
          // show input1
          out = C2A;
        } else if (timer.q[27:26]==1) {
          out = C2B;
        } else if ( (timer.q[27:26]==2) ){
            // show result
          out = shl.out;
        } else if ( timer.q[27:26]==3) {
          if ((shl.out==C2) ){
            timer.d = 0;
            state.d = state.C3;
          } else {
            state.d = state.ERROR;
          }
        }
      
        
      state.C3:
        shl.a = C3A;
        shl.b = C3B;
        if (timer.q[27:26]==0) {
          // show input1
          out = C3A;
        } else if (timer.q[27:26]==1) {
          out = C3B;
        } else if ( (timer.q[27:26]==2)  ){
            // show result
          out = shl.out;
        } else if (timer.q[27:26]==3) {
          if (shl.out==C3) {
            timer.d = 0;
            state.d = state.C4;
          } else {
            state.d = state.ERROR;
          }
        }
        
      state.C4:
        shl.a = C4A;
        shl.b = C4B;
        if (timer.q[27:26]==0) {
          // show input1
          out = C4A;
        } else if (timer.q[27:26]==1) {
          out = C4B;
        } else if ( (timer.q[27:26]==2) ){
            // show result
          out = shl.out;
        } else if (timer.q[27:26]==3) {
          if (shl.out==C4){
            timer.d = 0;
            state.d = state.GOOD;
          } else {
            state.d = state.ERROR;
          }
        }
      
      state.GOOD:
        if (timer.q[27] == 1) {
          true = 1;
          
        } else if (timer.q[25] == 1) {
          out = 16b1111111100000000;
        } else if (timer.q[25]==0){
          out = 16b0000000000000000;
        }
        
      state.ERROR:
        if (timer.q[25] == 1) {
          out = 16b0000000011111111;
        } else {
          out = 16b0000000000000000;
        }
        
        
    }
  }
}
